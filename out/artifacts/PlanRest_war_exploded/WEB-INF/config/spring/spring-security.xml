<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <!--Not necessary, just a duplicate-->
    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="jdbc/PlanRest"/>
    </beans:bean>

    <!--So that we can use groups and other data from DB tables-->
    <beans:bean id="jdbcGroupsImpl" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="enableGroups" value="true" />
        <beans:property name="enableAuthorities" value="true" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <beans:bean id="dataDirectSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">

        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url" value="jdbc:mysql://localhost:3306/planrest" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="The16th.september" />

    </beans:bean>


    <!--Create users in memory (without DB) -->
    <authentication-manager>
        <authentication-provider>
            <!--<user-service>-->
                <!--<user name="user" password="user" authorities="ROLE_USER" />-->
                <!--<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />-->
            <!--</user-service>-->
            <jdbc-user-service data-source-ref="dataDirectSource"
                               users-by-username-query="select u.login as username, u.password as password, u.enabled as enabled from user u where login = ?"
                               authorities-by-username-query="select u.login as username, r.name as authority from user u inner join user_role ur on u.id = ur.user_id
                                                              inner join role r on ur.role_id = r.id where u.login = ?"/>


        </authentication-provider>
    </authentication-manager>


    <!--Describing our security-->
    <http auto-config="true" use-expressions="true">

        <intercept-url pattern="/app/main" access="hasRole('ROLE_ADMIN')"/>

        <form-login
                login-page="/app/login"
                login-processing-url="/app/checkuser"
                default-target-url="/app/main"
                authentication-failure-url="/app/login?login_failed=1"
                username-parameter="username"
                password-parameter="password"/>
        <!--<remember-me key="jsfspring-sec" />-->

        <logout logout-success-url="/app/login" logout-url="/app/logout"/>
        <csrf disabled="true"/>
    </http>

</beans:beans>