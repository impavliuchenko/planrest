<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
start-state="main">

    <view-state id="main" view="/WEB-INF/views/main.xhtml">

        <var name="userPage" class="com.planrest.objects.UserPageComponent"/>

        <on-entry>
            <evaluate expression="userDAOImpl.getUniqueById(1)"
                      result="viewScope.user" result-type="com.planrest.entities.User"/>
            <set name="userPageComponent.user" value="user"/>
            <set name="conversationScope.userName" value="user"/>

            <evaluate expression="userDAOImpl.getFriendsByUserId(user.id)"
                      result="viewScope.allFriends"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserId(user.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserIdCount(user.id)"
                      result="viewScope.userWallRestaurantWallsDoneCount" result-type="long"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsPlanByUserIdCount(user.id)"
                      result="viewScope.userWallRestaurantWallsPlanCount" result-type="long"/>

            <evaluate expression="userLocationDAOImpl.getUserLocationByUserId(user.id)"
                      result="viewScope.userLocation" result-type="com.planrest.entities.Userlocation"/>
            
            <evaluate expression="userRatingDAOImpl.getAverageRatingByUserId(user.id)"
                      result="viewScope.averageRating" result-type="double"/>
        </on-entry>

        <transition on="toFriend" to="friend">
            <set name="flowScope.friend" value="userPage.user"/>
        </transition>

        <transition on="toRestaurant" to="restaurant">
            <set name="flowScope.restaurant" value="userPage.restaurant"/>
        </transition>

        <transition on="toMain" to="main"/>

        <transition on="delete" to="main">
            <set name="viewScope.userWallId" value="userPage.userWallId"/>
            <set name="viewScope.restaurantWallId" value="userPage.restaurantWallId"/>
            <evaluate expression="userWallService.deleteUserWallbyUserWallIdAndRestaurantWallId(userWallId, restaurantWallId, user.id)"/>
        </transition>

        <transition on="donePosts">
            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserId(user.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>
            <!--<render fragments="yo"/>-->
        </transition>

        <transition on="planPosts">
            <evaluate expression="userWallService.getUserwallRestaurantwallsPlanByUserId(user.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>
        </transition>

        <transition on="showVisitors">
            <set name="viewScope.restaurantWallId" value="userPage.restaurantWallId"/>
            <evaluate expression="userDAOImpl.getUsersByRestaurantWallId(restaurantWallId)"
                      result="viewScope.restaurantWallUsers"/>
            <evaluate expression="userWallService.splitDialog()"/>
            <!--<render fragments="restaurantPostsForm:splitDialog"/>-->
        </transition>

    </view-state>

    <view-state id="friend" view="/WEB-INF/views/main.xhtml">

        <var name="userPage" class="com.planrest.objects.UserPageComponent"/>

        <on-entry>
            <set name="viewScope.user" value="friend"/>
            <set name="userPageComponent.user" value="user"/>

            <evaluate expression="userDAOImpl.getFriendsByUserId(friend.id)"
                      result="viewScope.allFriends"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserId(friend.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserIdCount(user.id)"
                      result="viewScope.userWallRestaurantWallsDoneCount" result-type="long"/>

            <evaluate expression="userWallService.getUserwallRestaurantwallsPlanByUserIdCount(user.id)"
                      result="viewScope.userWallRestaurantWallsPlanCount" result-type="long"/>

            <evaluate expression="userLocationDAOImpl.getUserLocationByUserId(friend.id)"
                      result="viewScope.userLocation" result-type="com.planrest.entities.Userlocation"/>

            <evaluate expression="userRatingDAOImpl.getAverageRatingByUserId(friend.id)"
                      result="viewScope.averageRating" result-type="double"/>

        </on-entry>

        <transition on="toFriend" to="friend">
            <set name="flowScope.friend" value="userPage.user"/>
        </transition>

        <transition on="toRestaurant" to="restaurant">
            <set name="flowScope.restaurant" value="userPage.restaurant"/>
        </transition>

        <transition on="toMain" to="main"/>

        <transition on="donePosts">
            <evaluate expression="userWallService.getUserwallRestaurantwallsDoneByUserId(friend.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>
        </transition>

        <transition on="planPosts">
            <evaluate expression="userWallService.getUserwallRestaurantwallsPlanByUserId(friend.id)"
                      result="viewScope.userwallRestaurantwalls"/>
            <set name="userPageComponent.userwallRestaurantwalls" value="userwallRestaurantwalls"/>
        </transition>

        <transition on="showVisitors">
            <set name="viewScope.restaurantWallId" value="userPage.restaurantWallId"/>
            <evaluate expression="userDAOImpl.getUsersByRestaurantWallId(restaurantWallId)"
                      result="viewScope.restaurantWallUsers"/>
            <evaluate expression="userWallService.splitDialog()"/>
            <!--<render fragments="restaurantPostsForm:splitDialog"/>-->
        </transition>

    </view-state>

    <view-state id="restaurant" view="/WEB-INF/views/restaurant.xhtml">

        <var name="restaurantPage" class="com.planrest.objects.RestaurantPageComponent"/>

        <on-entry>

            <set name="restaurantPageComponent.restaurant" value="restaurant"/>

            <evaluate expression="restaurantWallService.getRestaurantWallsDoneByRestaurantId(restaurant.id)"
                      result="viewScope.restaurantWalls"/>
            <set name="restaurantPageComponent.restaurantWalls" value="restaurantWalls"/>
            <set name="restaurantPage.eventPlan" value="false"/>

            <evaluate expression="userDAOImpl.getVisitorsByRestaurantId(restaurant.id)"
                      result="viewScope.allVisitors"/>

            <evaluate expression="restaurantWallService.getRestaurantWallsDoneByRestaurantIdCount(restaurant.id)"
                      result="viewScope.restaurantWallsDoneCount" result-type="long"/>

            <evaluate expression="restaurantWallService.getRestaurantWallsPlanByRestaurantIdCount(restaurant.id)"
                      result="viewScope.restaurantWallsPlanCount" result-type="long"/>

            <evaluate expression="restaurantTypeDAOImpl.getRestaurantTypeByRestaurantId(restaurant.id)"
                      result="viewScope.restaurantType" result-type="com.planrest.entities.Restauranttype"/>

            <evaluate expression="restaurantLocationDAOImpl.getRestaurantLocationByRestaurantId(restaurant.id)"
                      result="viewScope.restaurantLocation" result-type="com.planrest.entities.Restaurantlocation"/>

            <evaluate expression="restaurantRatingDAOImpl.getAverageRestaurantRatingByRestaurantId(restaurant.id)"
                      result="viewScope.averageRating" result-type="double"/>

        </on-entry>

        <transition on="toMain" to="main"/>

        <transition on="toRestaurant" to="restaurant">
            <set name="flowScope.restaurant" value="restaurantPage.restaurant"/>
        </transition>

        <transition on="repost">
            <set name="viewScope.restaurantRepostingWall" value="restaurantPage.restaurantRepostingWall"/>
            <set name="viewScope.repostComment" value="restaurantPageComponent.repostComment"/>
            <evaluate expression="userWallService.addUserWallByRestaurantWall(restaurantRepostingWall, userName, repostComment)"/>
        </transition>

        <transition on="donePosts">
            <evaluate expression="restaurantWallService.getRestaurantWallsDoneByRestaurantId(restaurant.id)"
                      result="viewScope.restaurantWalls"/>
            <set name="restaurantPageComponent.restaurantWalls" value="restaurantWalls"/>
            <set name="restaurantPage.eventPlan" value="false"/>
        </transition>

        <transition on="planPosts">
            <evaluate expression="restaurantWallService.getRestaurantWallsPlanByRestaurantId(restaurant.id)"
                      result="viewScope.restaurantWalls"/>
            <set name="restaurantPageComponent.restaurantWalls" value="restaurantWalls"/>
            <set name="restaurantPage.eventPlan" value="true"/>
        </transition>

        <transition on="showVisitors">
            <set name="viewScope.restaurantWallId" value="restaurantPage.restaurantWallId"/>
            <evaluate expression="userDAOImpl.getUsersByRestaurantWallId(restaurantWallId)"
                      result="viewScope.restaurantWallUsers"/>
            <evaluate expression="restaurantWallService.splitDialog()"/>
            <!--<render fragments="restaurantPostsForm:splitDialog"/>-->
        </transition>

        <transition on="toFriend" to="friend">
            <set name="flowScope.friend" value="restaurantPage.user"/>
        </transition>

    </view-state>

</flow>